# path to a file with pwtool keys, if some encoded passwords are used this must point to a file with
# pwtool keys used to encode the passwords, otherwise it can be commented out
#pwtool_keys_file=${catalina.base}/pwtool.keys

# db home dir
db_dir=${catalina.base}/cloudCtrlDb

# worker shared secret, either plaintext password or password encoded by pwtool can be used
worker_auth_token=worker-auth-token

# client shared secret, either plaintext password or password encoded by pwtool can be used
client_auth_token=client-auth-token
# to support older client that can not set client_auth_token you can allow connections from client without any token set
# connections from clients with configured but incorrect secret key would be rejected
allow_insecure_clients_with_empty_token=false

# job storage dir
job_file_dir=${catalina.base}/jobFiles
# max file size (MB) allowed to be uploaded to the controller from clients or workers (eg. log files/result files/job files)
max_upload_size=4096

# SMTP server host name:
smtp_host=localhost
# SMTP server port number:
smtp_port=25

# if set to true, use SSL for connections to SMTP server; otherwise SSL is not used (the default)
#smtp_ssl=false
# if set to false, SMTP server certificate is always trusted; otherwise the certificate trust is based on certification path (the default)
#smtp_ssl_check_trust=true
# if set to false, STMP server identity is not checked; otherwise the server identity is checked as specified by RFC 2595 (the default)
#smtp_ssl_check_server_identity=true

# If your SMTP server requires authentication uncomment both smtp_auth_user and smtp_auth_pass properties
#   and give them proper values, otherwise leave both properties commented,
#   either plaintext password or password encoded by pwtool can be used in smtp_auth_pass
#smtp_auth_user=
#smtp_auth_pass=

# Sender's email address:
from_email=changeme@yourcompanyname.com

# time after finished job expires (hours) and is candidate for cleanup
job_expiry_delay=168

# time after non-communicating worker become stale (seconds);
# should be larger than worker_sleep_interval and worker_jobwatcher_interval
# defined for any worker
worker_stale_delay=60
# time after non-communicating worker become inactive (minutes)
# and all its unfinished jobs are marked as faulted;
# should be much larger than worker_stale_delay (note it uses different time units)
worker_inactive_delay=60
# time after non-communicating worker expires (hours) and is candidate for cleanup
worker_expiry_delay=168

# how often cleanup of expired jobs and workers is run (minutes)
cleanup_period=60

# ssc url
ssc_url=http://ssc-web/ssc
# ssc lockdown mode
ssc_lockdown_mode=false
# ssc shared secret, either plaintext password or password encoded by pwtool can be used
ssc_cloudctrl_secret=F0rt1fy!

# pool mapping mode; value must be DISABLED when used with SSC release older then 16.20;
# available values:
# - DISABLED:   client can request any pool, mapping from app. version to pool by SSC is never requested
# - ENABLED:    client can request any pool, mapping from app. version to pool by SSC is requested
# - ENFORCED:   client cannot request pool, mapping from app. version to pool by SSC is requested
pool_mapping_mode=disabled

# this server url
this_url=http://sc-controller:8081/scancentral-ctrl

# configure allowed remote IP address for SSC, only requests with matching remote IP address will be allowed
# (default is IP address resoled from ssc_url)
# set this if CS controller accesses SSC via reverse proxy server
# value can be comma separated IP addresses or CIDR network ranges
ssc_remote_ip=

# HTTP header where the SSC remote IP is looked up if ssc_remote_ip_trusted_proxies_range is set
# (default is X-FORWARDED-FOR)
ssc_remote_ip_header=
# configure addresses of trusted proxy servers used to access CS controller
# if the request came from trusted proxy address, SSC remote IP is resolved from HTTP header set by ssc_remote_ip_header
# (default is disabled - meaning ssc_remote_ip_header is never used to retrieve SSC remote IP address)
# set this if SSC is accessing CS controller via (reverse) proxy server
# value can be comma separated IP addresses or CIDR network ranges
ssc_remote_ip_trusted_proxies_range=

# ScanCentral client Zip location. It is downloaded by clients to be updated remotely.
# Property is not expected to be modified.
client_zip_location=${catalina.base}/client/scancentral.zip

# ScanCentral client auto update.
# If enabled ScanCentral clients with version less than controller one will download updates from controller.
# If disabled ScanCentral controller will not send updates to clients.
client_auto_update=true